cmake_minimum_required(VERSION 3.8)
project(occam)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(ament_cmake_ros REQUIRED)
find_package(rclcpp REQUIRED)
find_package(rclcpp_components REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(camera_info_manager REQUIRED)
find_package(image_transport REQUIRED)
find_package(OpenCV REQUIRED)
find_package(cv_bridge REQUIRED)

set(INDIGOSDK_PATH "${CMAKE_CURRENT_SOURCE_DIR}/indigosdk")
include_directories(
	${INDIGOSDK_PATH}/include
	${INDIGOSDK_PATH}/src
)

add_subdirectory(${INDIGOSDK_PATH})

add_executable(occam_node src/occam_node.cpp)
target_link_libraries(occam_node indigo) # generated by the cmake of indigosdk (???)

ament_target_dependencies(occam_node 
  rclcpp   
  rclcpp_components
  sensor_msgs
  geometry_msgs
  camera_info_manager
  image_transport
  OpenCV
  cv_bridge  
)

target_include_directories(occam_node PUBLIC
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
  $<INSTALL_INTERFACE:include>
  ${INDIGOSDK_PATH}/include
)

include_directories(include ${INDIGOSDK_PATH}/include)


target_compile_features(occam_node PUBLIC c_std_99 cxx_std_17)  # Require C99 and C++17

install(TARGETS 
  occam_node
  DESTINATION lib/${PROJECT_NAME})



if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # uncomment the line when a copyright and license is not present in all source files
  #set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # uncomment the line when this package is not in a git repo
  #set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()


ament_package()
